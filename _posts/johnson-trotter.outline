Q.   How does the Johnson-Trotter algorithm work?
C.   There is no Johnson-Trotter algorithm. There is one algorithm by Johnson and one by Trotter.

1. If there is no Johnson-Trotter algorithm, what are top results in google explaining?
   They are explaining Johnson-Trotter sequences, the Johnson-Trotter method, or a variant of Johnson's algorithm.
2. What is each one, what is the difference between them?

Q.   How does Johnson's algorithm / Trotter's algorithm work?
C.   The algorithms work in a very similar way. Both algorithms determine an element, a position (relative position and offset), and a direction that determine the elements to transpose.

0.   What is an example?

1.   What is position and direction?
     1.   Position consists of the a relative position and an offset.
     	  1. Relative position is the position of the element within the 1...n elements.
          2. Offset is the offset of the 1...n elements within the rest of the elements.
     2.   Direction is the direction of movement of each element.
     
2.   What is the rule for determining the element?
     The rule is given by the Johnson-Trotter method.

I.   Both keep a set of counters that determine the next element to move and its position.
     1.   In both algorithms, there is one counter for each element.
     1.   In each algorithm, the next element to move is determined by a different rule.
     2.   In each algorithm, position is determined by a different rule.
II.  Johnson's algorithm determines the direction and offset from the current state of the counters.
III. Trotter's algorithm determines the direction from the previous state of the counters and the previous direction.
IV.  Trotter's algorithm determines the offset from the previous state of the counters.

4.   Is it possible to implement the method recursively?
     Yes. Consider my recursive algorithm.

S.   What is the significance of knowing how the Johnson-Trotter algorithm works?
     - Learn it so that you don't reinvent it when you need to construct permutations.
     - It is a fundamental part of any good programmer's bag of tricks.



INTRODUCTION

Current state:

Problem:

Challenge:

Approach / Solution:

I would like to explain how the Johnson-Trotter algorithm works because I did not find a good explanation for it.

When I looked in google for an explanation, all I got were one of the following.
- Explanations of an approach.
- Explanations of a general method and no sample implementation.
- Implementations that followed the approach and did not correspond to the general method.

A good explanation is one that explains either one of the actual algorithms by Johnson or Trotter or both.


Q.   How does the Johnson-Trotter algorithm work?
C.   There is no Johnson-Trotter algorithm, rather there is an approach, a method and one algorithm by Johnson and another by Trotter.

I.    When you say Johnson-Trotter algorithm, you usually mean Johnson-Trotter approach or Johnson-Trotter 
II.   Johnson and Trotter gave different but very similar algorithms.
III.  The method is an abstraction of Johnson and Trotter's algorithms.
IV.   The approach is an abstraction of the method.


I would like to explain how the Johnson-Trotter algorithm works because I did not find a good explanation for it.